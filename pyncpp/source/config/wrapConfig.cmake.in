# Copyright (c) 2024 IHU Liryc, Universit√© de Bordeaux, Inria.
# License: BSD-3-Clause

cmake_policy(SET CMP0057 NEW) # IN_LIST operator

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(previous_@PACKAGE_NAME@_DIR "${@PACKAGE_NAME@_DIR}")
set(@PACKAGE_NAME@_DIR)

get_directory_property(_previous_targets IMPORTED_TARGETS)

find_dependency(@PACKAGE_NAME@ @PACKAGE_VERSION@
    COMPONENTS ${@PACKAGE_NAME@_FIND_COMPONENTS}
    )

set(@PACKAGE_NAME@_DIR" ${previous_@PACKAGE_NAME@_DIR}")
set(@PACKAGE_NAME@_FOUND TRUE)

set(@PACKAGE_NAME@_PATHS)

get_directory_property(_imported_targets IMPORTED_TARGETS)

foreach(_target ${_imported_targets})
    if(NOT _target IN_LIST _previous_targets)
        get_target_property(_location ${_target} IMPORTED_LOCATION)

        set(_location_variable)
        get_target_property(_configs ${_target} IMPORTED_CONFIGURATIONS)

        if(_location)
            set(_location_variable IMPORTED_LOCATION)
        else()
            if(_configs)
                foreach(_config ${_configs})
                    get_target_property(_location ${_target} IMPORTED_LOCATION_${_config})
                    if(_location)
                        set(_location_variable IMPORTED_LOCATION_${_config})
                        break()
                    endif()
                endforeach()
            endif()
        endif()

        if(_location_variable)
            cmake_path(GET _location FILENAME library_name)
            file(GLOB_RECURSE python_library "@PACKAGE_BINARY_DIR@/${library_name}")

            if(python_library)
                cmake_path(GET python_library PARENT_PATH library_dir)

                if(library_dir MATCHES "^(.*)/.*\.framework(/.*)?$")
                    set(library_dir "${CMAKE_MATCH_1}")
                endif()

                if(NOT library_dir MATCHES "^.*/plugins(/.*)?$")
                    file(RELATIVE_PATH library_dir "@pyncpp_ROOT@" "${library_dir}")
                    list(APPEND @PACKAGE_NAME@_PATHS ${library_dir})
                endif()

                set_target_properties(${_target} PROPERTIES
                    IMPORTED_LOCATION "${python_library}"
                    )
                if(_configs)
                    foreach(_config ${_configs})
                        set_target_properties(${_target} PROPERTIES
                            IMPORTED_LOCATION_${_config} "${python_library}"
                            )
                    endforeach()
                endif()
            endif()
        endif()
    endif()
endforeach()

list(REMOVE_DUPLICATES @PACKAGE_NAME@_library_dirS)

foreach(_component ${@PACKAGE_NAME@_FIND_COMPONENTS})
    set(@PACKAGE_NAME@_${_component}_FOUND TRUE)
endforeach()

check_required_components(@PACKAGE_NAME@)
